{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/book-panel/book-panel.component.ts","./src/app/book-panel/book-panel.component.html","./src/app/material/material.module.ts","./src/app/shared/booking.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'booking-test';\n}\n","<app-book-panel></app-book-panel>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BookPanelComponent } from './book-panel/book-panel.component';\nimport { MaterialModule} from './material/material.module';\nimport {BookingService} from './shared/booking.service';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BookPanelComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n\n  ],\n  providers: [BookingService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {BookingService} from '../shared/booking.service';\n\n@Component({\n  selector: 'app-book-panel',\n  templateUrl: './book-panel.component.html',\n  styleUrls: ['./book-panel.component.css']\n})\n\n\n\nexport class BookPanelComponent implements OnInit {\n\n  public status = 'booking';\n  public result;\n\n  constructor(public service: BookingService) {\n\n  }\n\n  ngOnInit(): void {\n  }\n\n  handleSubmit(): void {\n    if (this.service.form.valid) {\n      let hours = parseInt(this.service.form.get('hours').value);\n      let mins = parseInt(this.service.form.get('mins').value);\n      let date = this.service.form.get('date').value;\n      let day = date.getDay();\n      if (day === 0 || day === 6) {\n        this.result = Math.round((hours + mins / 60) * 150);\n      } else {\n        this.result = Math.round((hours + mins / 60) * 100);\n      }\n    }\n    this.status = 'result';\n  }\n}\n","<div class=\"container\">\n  <mat-toolbar >\n    <span class=\"fill-space\"></span>\n    <span>BOOKING</span>\n    <span class=\"fill-space\"></span>\n  </mat-toolbar>\n  <ng-container *ngIf=\"status === 'booking'\">\n  <form  [formGroup]=\"service.form\" class=\"normal-form\">\n    <mat-grid-list cols=\"1\" rowHeight=\"100px\">\n      <mat-grid-tile>\n        <input type=\"hidden\" formControlName=\"$key\">\n      </mat-grid-tile>\n      <mat-grid-tile class=\"input-hours-mins\">\n        <mat-form-field>\n          <mat-label>Hours</mat-label>\n        <input formControlName=\"hours\" matInput placeholder=\"Hours\">\n          <mat-error *ngIf=\"service.form.controls['hours'].errors?.required\"> This field is mandatory.</mat-error>\n          <mat-error *ngIf=\"service.form.controls['hours'].errors?.invalidHours\">Hours should be a number between 0 to 6.</mat-error>\n        </mat-form-field>\n        <mat-form-field>\n          <mat-label>Minutes</mat-label>\n          <input formControlName=\"mins\" matInput placeholder=\"Minutes\">\n          <mat-error *ngIf=\"service.form.controls['mins'].errors?.required\"> This field is mandatory.</mat-error>\n          <mat-error *ngIf=\"service.form.controls['mins'].errors?.invalidMinutes\">Minutes should be a number between 1 to 59.</mat-error>\n        </mat-form-field>\n      </mat-grid-tile>\n      <mat-grid-tile>\n        <mat-form-field>\n          <mat-label>Choose a date</mat-label>\n          <input matInput formControlName=\"date\" [min]=\"service.minDate\" [max] = 'service.maxDate' [matDatepicker]=\"picker\">\n          <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n          <mat-datepicker #picker></mat-datepicker>\n        </mat-form-field>\n      </mat-grid-tile>\n      <mat-grid-tile>\n        <mat-form-field>\n        <mat-select formControlName=\"time\" placeholder=\"Time\">\n          <ng-container *ngFor=\"let time of service.timeList\">\n          <mat-option  value={{time}}>{{time}}</mat-option>\n          </ng-container>\n        </mat-select>\n        </mat-form-field>\n      </mat-grid-tile>\n      <mat-grid-tile class=\"button-area\">\n        <button mat-stroked-button  type=\"submit\" [disabled]=\"service.form.invalid\" (click)=\"handleSubmit()\" >Submit</button>\n        <button mat-stroked-button  type=\"clear\" (click)=\"service.form.reset()\">Clear</button>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </form>\n  </ng-container>\n  <ng-container *ngIf = \"status === 'result'\" >\n    <h2 class=\"result\">\n    The cost is ${{result}}.\n    </h2>\n  </ng-container>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatNativeDateModule} from '@angular/material/core';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatButtonModule} from '@angular/material/button';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    MatToolbarModule,\n    ReactiveFormsModule,\n    MatGridListModule,\n    MatInputModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatSelectModule,\n    MatButtonModule\n  ],\n  exports: [\n    MatToolbarModule,\n    ReactiveFormsModule,\n    MatGridListModule,\n    MatInputModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatSelectModule,\n    MatButtonModule\n  ]\n})\nexport class MaterialModule { }\n","import { Injectable } from '@angular/core';\nimport {FormGroup, FormControl, Validators, ValidatorFn, AbstractControl} from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookingService {\n  public form: FormGroup;\n  public minDate: Date = new Date();\n  public maxDate = new Date();\n  public timeList = ['8:00', '8:30', '9:00', '9:30', '10:00', '10:30', '11:00', '11:30', '12:00',\n    '12:30', '13:00', '13:30', '14:00', '14:30', '15:00', '15:30', '16:00', '16:30', '17:00', '17:30', '18:00', '18:30', '19:00'\n  ];\n\n  constructor() {\n    this.maxDate.setDate(new Date().getDate() + 14);\n    this.form = new FormGroup({\n      $key: new FormControl(null),\n      hours: new FormControl('', [Validators.required, this.hoursValidator]),\n      mins: new FormControl('', [Validators.required, this.minsValidator]),\n      date: new FormControl('', [Validators.required]),\n      time: new FormControl(1, Validators.required),\n    });\n  }\n\n  hoursValidator(control: AbstractControl): any {\n      let hours = control.value;\n      if (hours === '') return null;\n      let parsed = parseInt(hours, 10);\n      let inValid: boolean = isNaN(parsed) || (parsed < 0 || parsed > 6);\n      return inValid ? {invalidHours: {value: control.value}} : null;\n  }\n\n  minsValidator(control: AbstractControl): any {\n    let mins = control.value;\n    if (mins === '') return null;\n    let parsed = parseInt(mins, 10);\n    let inValid: boolean = isNaN(parsed) || (parsed < 1 || parsed > 59);\n    return inValid ? {invalidMinutes: {value: control.value}} : null;\n  }\n\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}